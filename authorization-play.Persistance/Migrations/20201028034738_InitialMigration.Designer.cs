// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using authorization_play.Persistance;

namespace authorization_play.Persistance.Migrations
{
    [DbContext(typeof(AuthorizationPlayContext))]
    [Migration("20201028034738_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("authorization_play.Persistance.Models.Action", b =>
                {
                    b.Property<int>("ActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CanonicalName")
                        .HasColumnType("text");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ActionId");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrant", b =>
                {
                    b.Property<int>("DelegationGrantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PrincipalId")
                        .HasColumnType("integer");

                    b.Property<int>("SchemaId")
                        .HasColumnType("integer");

                    b.Property<int?>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("DelegationGrantId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("SchemaId");

                    b.HasIndex("TagId");

                    b.ToTable("DelegationGrants");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrantResource", b =>
                {
                    b.Property<int>("DelegationGrantId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.HasKey("DelegationGrantId", "ResourceId");

                    b.HasIndex("ResourceId");

                    b.ToTable("DelegationGrantResources");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrantResourceAction", b =>
                {
                    b.Property<int>("DelegationGrantId")
                        .HasColumnType("integer");

                    b.Property<int>("ActionId")
                        .HasColumnType("integer");

                    b.HasKey("DelegationGrantId", "ActionId");

                    b.HasIndex("ActionId");

                    b.ToTable("DelegationGrantResourceActions");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrantTag", b =>
                {
                    b.Property<int>("DelegationGrantId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("DelegationGrantId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("DelegationGrantTags");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrant", b =>
                {
                    b.Property<int>("PermissionGrantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PrincipalId")
                        .HasColumnType("integer");

                    b.Property<int>("SchemaId")
                        .HasColumnType("integer");

                    b.Property<int?>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("PermissionGrantId");

                    b.HasIndex("PrincipalId");

                    b.HasIndex("SchemaId");

                    b.HasIndex("TagId");

                    b.ToTable("PermissionGrants");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrantResource", b =>
                {
                    b.Property<int>("PermissionGrantId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.HasKey("PermissionGrantId", "ResourceId");

                    b.HasIndex("ResourceId");

                    b.ToTable("PermissionGrantResources");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrantResourceAction", b =>
                {
                    b.Property<int>("PermissionGrantId")
                        .HasColumnType("integer");

                    b.Property<int>("ActionId")
                        .HasColumnType("integer");

                    b.HasKey("PermissionGrantId", "ActionId");

                    b.HasIndex("ActionId");

                    b.ToTable("PermissionGrantResourceActions");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrantTag", b =>
                {
                    b.Property<int>("PermissionGrantId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("PermissionGrantId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PermissionGrantTags");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.Principal", b =>
                {
                    b.Property<int>("PrincipalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CanonicalName")
                        .HasColumnType("text");

                    b.HasKey("PrincipalId");

                    b.ToTable("Principals");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CanonicalName")
                        .HasColumnType("text");

                    b.Property<int>("ResourceKindId")
                        .HasColumnType("integer");

                    b.HasKey("ResourceId");

                    b.HasIndex("ResourceKindId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.ResourceAction", b =>
                {
                    b.Property<int>("ResourceActionId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int?>("ActionId")
                        .HasColumnType("integer");

                    b.HasKey("ResourceActionId", "ResourceId");

                    b.HasIndex("ActionId");

                    b.HasIndex("ResourceId");

                    b.ToTable("ResourceActions");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.ResourceKind", b =>
                {
                    b.Property<int>("ResourceKindId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ResourceKindId");

                    b.ToTable("ResourceKinds");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.Schema", b =>
                {
                    b.Property<int>("SchemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CanonicalName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.HasKey("SchemaId");

                    b.ToTable("Schemas");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CanonicalName")
                        .HasColumnType("text");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrant", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Schema", "Schema")
                        .WithMany()
                        .HasForeignKey("SchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Tag", null)
                        .WithMany("DelegationGrants")
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrantResource", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.DelegationGrant", "Grant")
                        .WithMany("Resources")
                        .HasForeignKey("DelegationGrantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrantResourceAction", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.DelegationGrant", "Grant")
                        .WithMany("ResourceActions")
                        .HasForeignKey("DelegationGrantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.DelegationGrantTag", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.DelegationGrant", "Grant")
                        .WithMany("Tags")
                        .HasForeignKey("DelegationGrantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrant", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Schema", "Schema")
                        .WithMany()
                        .HasForeignKey("SchemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Tag", null)
                        .WithMany("PermissionGrants")
                        .HasForeignKey("TagId");
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrantResource", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.PermissionGrant", "Grant")
                        .WithMany("Resources")
                        .HasForeignKey("PermissionGrantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrantResourceAction", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.PermissionGrant", "Grant")
                        .WithMany("Actions")
                        .HasForeignKey("PermissionGrantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.PermissionGrantTag", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.PermissionGrant", "Grant")
                        .WithMany("Tags")
                        .HasForeignKey("PermissionGrantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("authorization_play.Persistance.Models.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.Resource", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.ResourceKind", "ResourceKind")
                        .WithMany()
                        .HasForeignKey("ResourceKindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("authorization_play.Persistance.Models.ResourceAction", b =>
                {
                    b.HasOne("authorization_play.Persistance.Models.Action", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId");

                    b.HasOne("authorization_play.Persistance.Models.Resource", "Resource")
                        .WithMany("Actions")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
